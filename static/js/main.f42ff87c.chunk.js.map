{"version":3,"sources":["components/contactList/ContactList.module.css","components/filter/Filter.module.css","components/notification/Notification.module.css","components/App.module.css","components/contactForm/ContactForm.js","components/contactList/ContactList.js","components/filter/Filter.js","components/notification/Notification.js","components/App.js","index.js","components/contactForm/ContactForm.module.css"],"names":["module","exports","ContactForm","addContact","useState","name","number","state","setState","onHandleChange","e","target","value","prev","className","styles","form","onSubmit","preventDefault","label","inputName","type","placeholder","onChange","inputNumber","buttonAddContacts","ContactList","contacts","deleteContact","TransitionGroup","component","list","map","id","CSSTransition","timeout","classNames","listItem","contactText","deleteButton","data-id","onClick","Filter","filter","onHandleFilter","wrapper","Notification","text","notificationWrapper","alertText","App","alert","setAlert","setAlertText","useEffect","localStorage","setItem","JSON","stringify","localContacts","getItem","parse","getVisibleAlert","setTimeout","in","appear","unmountOnExit","titlePhonebook","newContacts","contact","uuidv4","length","some","toLowerCase","titleContacts","console","log","prevState","includes","getFilteredContact","contactId","dataset","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f42ff87c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactList_wrapper__3BZnK\",\"list\":\"ContactList_list__sVk3U\",\"listItem\":\"ContactList_listItem__2AQyN\",\"contactText\":\"ContactList_contactText__1gJaO\",\"deleteButton\":\"ContactList_deleteButton__1VTN1\",\"enter\":\"ContactList_enter__1aV52\",\"enterActive\":\"ContactList_enterActive__rB4zf\",\"exit\":\"ContactList_exit__30ZLh\",\"exitActive\":\"ContactList_exitActive__RUsNE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Filter_wrapper__62NZ1\",\"inputName\":\"Filter_inputName__Of1ls\",\"filter\":\"Filter_filter__2K4yo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationWrapper\":\"Notification_notificationWrapper__3X9As\",\"alertText\":\"Notification_alertText__2Bq6p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__28ohn\",\"titlePhonebook\":\"App_titlePhonebook__3oZRG\",\"titleContacts\":\"App_titleContacts__1oCAg\",\"appear\":\"App_appear__2VuTa\",\"appearActive\":\"App_appearActive__1oDcp\",\"exit\":\"App_exit__y4TPL\",\"exitActive\":\"App_exitActive__3h4Pv\"};","import React, { useState } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nconst ContactForm = ({ addContact }) => {\r\n  const [state, setState] = useState({\r\n    name: \"\",\r\n    number: \"\",\r\n  });\r\n\r\n  const onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState((prev) => ({ ...prev, [name]: value }));\r\n    // const name = e.target.name;\r\n    // this.setState({ [name]: e.target.value });\r\n    // console.log(\"value\", value);\r\n    // console.log(\"name\", name);\r\n  };\r\n\r\n  const onHandleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addContact({\r\n      ...state,\r\n      // name: state.name,\r\n      // number: state.number,\r\n    });\r\n    setState({ name: \"\", number: \"\" }); //як висипати стейт по іншому\r\n  };\r\n\r\n  // const { name, number } = state;\r\n  return (\r\n    <>\r\n      <form className={styles.form} onSubmit={onHandleSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            className={styles.inputName}\r\n            type=\"text\"\r\n            placeholder=\"Enter Name\"\r\n            value={state.name}\r\n            name=\"name\"\r\n            onChange={onHandleChange}\r\n          />\r\n          {/* <label key={uuidv4()}> */}\r\n        </label>\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.inputNumber}\r\n            type=\"text\"\r\n            placeholder=\"xxx-xx-xx\"\r\n            value={state.number}\r\n            name=\"number\"\r\n            onChange={onHandleChange}\r\n          />\r\n        </label>\r\n\r\n        <button className={styles.buttonAddContacts} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\nexport default ContactForm;\r\n//  класові компоненти\r\n\r\n// import React, { Component } from \"react\";\r\n// import styles from \"./ContactForm.module.css\";\r\n\r\n// export default class ContactForm extends Component {\r\n//   state = {\r\n//     name: \"\",\r\n//     number: \"\",\r\n//   };\r\n\r\n//   onHandleChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     this.setState({ [name]: value });\r\n//     // const name = e.target.name;\r\n//     // this.setState({ [name]: e.target.value });\r\n//     // console.log(\"value\", value);\r\n//     // console.log(\"name\", name);\r\n//   };\r\n\r\n//   onHandleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     this.props.addContact({\r\n//       ...this.state,\r\n//       // name: this.state.name,\r\n//       // number: this.state.number,\r\n//     });\r\n//     this.setState({ name: \"\", number: \"\" }); //як висипати стейт по іншому\r\n//   };\r\n\r\n//   render() {\r\n//     const { name, number } = this.state;\r\n//     return (\r\n//       <form className={styles.form} onSubmit={this.onHandleSubmit} s>\r\n//         <label className={styles.label}>\r\n//           Name\r\n//           <input\r\n//             className={styles.inputName}\r\n//             type=\"text\"\r\n//             placeholder=\"Enter Name\"\r\n//             value={name}\r\n//             name=\"name\"\r\n//             onChange={this.onHandleChange}\r\n//           />\r\n//           {/* <label key={uuidv4()}> */}\r\n//         </label>\r\n//         <label className={styles.label}>\r\n//           Number\r\n//           <input\r\n//             className={styles.inputNumber}\r\n//             type=\"text\"\r\n//             placeholder=\"xxx-xx-xx\"\r\n//             value={number}\r\n//             name=\"number\"\r\n//             onChange={this.onHandleChange}\r\n//           />\r\n//         </label>\r\n\r\n//         <button className={styles.buttonAddContacts} type=\"submit\">\r\n//           Add contact\r\n//         </button>\r\n//       </form>\r\n//     );\r\n//   }\r\n// }\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nexport const ContactList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <div>\r\n      <TransitionGroup component=\"ul\" className={styles.list}>\r\n        {contacts.map(({ id, name, number }) => {\r\n          return (\r\n            <CSSTransition key={id} timeout={250} classNames={styles}>\r\n              <li className={styles.listItem} key={id}>\r\n                <h3>{name}:</h3>\r\n                <p className={styles.contactText}>{number}</p>\r\n                <button\r\n                  className={styles.deleteButton}\r\n                  type=\"button\"\r\n                  data-id={id}\r\n                  onClick={deleteContact}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </li>\r\n            </CSSTransition>\r\n          );\r\n        })}\r\n      </TransitionGroup>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  deleteContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n\r\n//  класові компоненти\r\n\r\n// import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\n// import styles from \"./ContactList.module.css\";\r\n\r\n// const ContactList = ({ contacts, deleteContact }) => {\r\n//   return (\r\n//     <ul className={styles.list}>\r\n//       {contacts.map((item) => (\r\n//         <li className={styles.listItem} key={item.id}>\r\n//           <h3>{item.name}:</h3>\r\n//           <p className={styles.contactText}>{item.number}</p>\r\n//           <button\r\n//             className={styles.deleteButton}\r\n//             type=\"button\"\r\n//             data-id={item.id}\r\n//             onClick={deleteContact}\r\n//           >\r\n//             Delete\r\n//           </button>\r\n//         </li>\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n// };\r\n\r\n// ContactList.propTypes = {\r\n//   contacts: PropTypes.array.isRequired,\r\n//   deleteContact: PropTypes.func.isRequired,\r\n// };\r\n\r\n// export default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filter, onHandleFilter }) => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <h3 className={styles.inputName}>Find contacts by name</h3>\r\n      <input\r\n        className={styles.filter}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        placeholder=\"Filter Name\"\r\n        onChange={onHandleFilter}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onHandleFilter: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Notification.module.css\";\r\n\r\nexport const Notification = ({ text }) => {\r\n  return (\r\n    <div className={styles.notificationWrapper}>\r\n      <p className={styles.alertText}>{text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n};\r\n","// Хуки\nimport React, { useState, useEffect } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport styles from \"./App.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./contactForm/ContactForm\";\nimport ContactList from \"./contactList/ContactList\";\nimport Filter from \"./filter/Filter\";\nimport { Notification } from \"./notification/Notification\";\n\nconst App = () => {\n  const [state, setState] = useState({\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  });\n\n  const [alert, setAlert] = useState(false);\n  const [text, setAlertText] = useState(\"\");\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevState.contacts !== this.state.contacts) {\n  //     localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n  //   }\n  // }\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(state.contacts));\n  }, [state.contacts]);\n\n  useEffect(() => {\n    const localContacts = localStorage.getItem(\"contacts\");\n    if (localContacts) {\n      setState((prev) => ({\n        ...prev,\n        contacts: [...JSON.parse(localContacts)],\n      }));\n    }\n  }, []);\n  // componentDidMount() {\n  //   const persistedContacts = localStorage.getItem(\"contacts\");\n  //   if (persistedContacts) {\n  //     this.setState({\n  //       contacts: JSON.parse(persistedContacts),\n  //     });\n  //   }\n  // }\n\n  const getVisibleAlert = (text) => {\n    setAlertText(text);\n    setAlert(true);\n    setTimeout(() => {\n      setAlert(false);\n    }, 2000);\n    setTimeout(() => {\n      setAlertText(\"\");\n    }, 2700);\n  };\n\n  const addContact = (newContacts) => {\n    const contact = {\n      id: uuidv4(),\n      name: newContacts.name,\n      number: newContacts.number,\n    };\n\n    if (!newContacts.name.length) {\n      getVisibleAlert(\"Please, enter your name\");\n    } else if (!newContacts.number.length) {\n      getVisibleAlert(\"Please, enter your number\");\n    } else {\n      if (\n        state.contacts.some(\n          (contact) =>\n            contact.name.toLowerCase() === newContacts.name.toLowerCase()\n        )\n      ) {\n        getVisibleAlert(`${newContacts.name} is already in contacts.`);\n      } else {\n        setState((prev) => ({\n          ...prev,\n          contacts: [...state.contacts, contact],\n        }));\n      }\n    }\n  };\n\n  const deleteContact = (e) => {\n    const contactId = e.target.dataset.id;\n    setState((prevState) => ({\n      ...prevState,\n      contacts: prevState.contacts.filter((item) => item.id !== contactId),\n    }));\n  };\n\n  const onHandleFilter = (e) => {\n    console.log(e.target.value);\n    setState((prevState) => ({ ...prevState, filter: e.target.value }));\n  };\n\n  const getFilteredContact = () => {\n    const { contacts, filter } = state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n  // Notification  вставити компонент!!!\n  return (\n    <div className={styles.wrapper}>\n      <CSSTransition\n        in={alert}\n        appear={true}\n        timeout={250}\n        classNames={styles}\n        unmountOnExit\n      >\n        <Notification text={text} />\n      </CSSTransition>\n      <CSSTransition\n        in={true}\n        appear={true}\n        classNames={styles}\n        timeout={250}\n        unmountOnExit\n      >\n        <h1 className={styles.titlePhonebook}>Phonebook</h1>\n      </CSSTransition>\n\n      <ContactForm addContact={addContact} />\n\n      <div>\n        {state.contacts.length > 0 && (\n          <h2 className={styles.titleContacts}>Contacts</h2>\n        )}\n\n        <CSSTransition\n          in={state.contacts.length > 1}\n          classNames={styles}\n          timeout={250}\n          unmountOnExit\n        >\n          <Filter filter={state.filter} onHandleFilter={onHandleFilter} />\n        </CSSTransition>\n      </div>\n\n      {state.contacts.length > 0 && (\n        <CSSTransition\n          in={true}\n          appear={true}\n          classNames={styles}\n          timeout={250}\n          unmountOnExit\n        >\n          <ContactList\n            contacts={getFilteredContact()}\n            deleteContact={deleteContact}\n          />\n        </CSSTransition>\n      )}\n    </div>\n  );\n};\nexport default App;\n\n//\n//\n\n//  Класові компоненти\n\n// import React, { Component } from \"react\";\n// import styles from \"./App.module.css\";\n// import { v4 as uuidv4 } from \"uuid\";\n// import ContactForm from \"./contactForm/ContactForm\";\n// import ContactList from \"./contactList/ContactList\";\n// import Filter from \"./filter/Filter\";\n\n// export default class App extends Component {\n//   state = {\n//     contacts: [\n//       { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//       { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//       { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//       { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//     ],\n//     filter: \"\",\n//   };\n\n//   componentDidMount() {\n//     const persistedContacts = localStorage.getItem(\"contacts\");\n//     if (persistedContacts) {\n//       this.setState({\n//         contacts: JSON.parse(persistedContacts),\n//       });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (prevState.contacts !== this.state.contacts) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   addContact = (newContacts) => {\n//     const contact = {\n//       id: uuidv4(),\n//       name: newContacts.name,\n//       number: newContacts.number,\n//     };\n\n//     this.setState((prevState) => {\n//       return prevState.contacts.find(\n//         (contact) =>\n//           contact.name.toLowerCase() === newContacts.name.toLowerCase()\n//       )\n//         ? alert(`${newContacts.name} is already in contacts.`)\n//         : {\n//             contacts: [...prevState.contacts, contact],\n//           };\n//     });\n//   };\n\n//   deleteContact = (e) => {\n//     const id = e.target.dataset.id;\n//     this.setState({\n//       contacts: [...this.state.contacts.filter((item) => item.id !== id)],\n//     });\n//   };\n\n//   // onHandleFilter = (e) => {\n//   //   console.log(e.target.value);\n//   //   this.setState({ filter: e.target.value });\n//   // };\n//   onHandleFilter = (value) => {\n//     console.log(value);\n//     this.setState({ filter: value });\n//   };\n\n//   getFilteredContact = () => {\n//     const { contacts, filter } = this.state;\n//     return contacts.filter((item) =>\n//       item.name.toLowerCase().includes(filter.toLowerCase())\n//     );\n//   };\n\n//   render() {\n//     const { filter, contacts } = this.state;\n//     const getFilteredContact = this.getFilteredContact();\n//     return (\n//       <div className={styles.wrapper}>\n//         <h1 className={styles.titlePhonebook}>Phonebook</h1>\n//         <ContactForm addContact={this.addContact} />\n\n//         {contacts.length > 0 && (\n//           <div>\n//             <h2 className={styles.titleContacts}>Contacts</h2>\n//             <Filter filter={filter} onHandleFilter={this.onHandleFilter} />{\" \"}\n//           </div>\n//         )}\n//         <ContactList\n//           contacts={getFilteredContact}\n//           deleteContact={this.deleteContact}\n//         />\n//       </div>\n//     );\n//   }\n// }\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3TydK\",\"inputName\":\"ContactForm_inputName__2mpOO\",\"inputNumber\":\"ContactForm_inputNumber__3Wdh1\",\"label\":\"ContactForm_label__K_Kvu\",\"buttonAddContacts\":\"ContactForm_buttonAddContacts__hTZxv\"};"],"sourceRoot":""}